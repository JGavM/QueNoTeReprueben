import java.awt.Graphics;
import java.awt.event.KeyEvent;
import static java.lang.Thread.sleep;
import java.util.logging.Level;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.Logger;
import javax.swing.*;

public class MiniJuego extends javax.swing.JFrame {
    
    /**
     * Método usado internamente para terminar esta ventana y avanzar a la siguiente
     */
    private void CerrarVentana(){
        this.setVisible(false);
        this.setEnabled(false);
        Ventanas.mostrarJuego();
    }
   
   /**
    * Este método inicia un hilo encargado de administrar la barra de progreso
    * en la interfaz gráfica
    */
   public void LoadingHilo(){
       //Inicia la barra y ajusta una cantidad aleatoria de tiempo para la barra
        Loading.setValue(0);
        int aleatorio = ThreadLocalRandom.current().nextInt(100, 200);
        Loading.setMaximum(aleatorio);
        //Nuevo hilo
       Thread loading = new Thread(){
            public void run(){
                for (int i = 0; i<=aleatorio;i++){
                    try {
                        //Aumenta gradualmente el llenado de la barra de progreso
                        Porcenaje.setText(Integer.toString((i*100)/aleatorio)+"%");
                        Loading.setValue(i);
                        sleep(85);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MiniJuego.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //Si la barra está llena, cierra la ventana y ve a Juego
                    if(i==aleatorio){
                        CerrarVentana();
                    }
                }
            }
        };
       //Inicio del hilo creado
       loading.start();
   }
  
    public MiniJuego() {
        initComponents();
        
        //Ajusta a la imagen del personaje en la posición correcta con las dimensiones adecuadas
        monini.setBounds(250,215,monini.getWidth() , monini.getHeight());
        //Agrega a la etiqueta métodos útiles para crear animación con diferentes imágenes
        monini.add(new Movimiento(monini));
        Movimiento.moverMonini();
        
        this.setLocation(100, 100);
        
        //Se corre un hilo de manera inmediata que vuelve a pintar el escenario
        // cuando su ubicación llega a cierto límite
        new Thread(){
            public void run(){
                int x=0;
                int y=escenario.getLocation().y;
                while(true){
                    //Mueve la posición horizontal de la imagen de fondo hacia la izquierda
                    x-=10;
                    //Si la imagen ya avanzó 600 posiciones, reinicia su posición
                    if(x<-600){
                        x=0;
                    }
                    //Cada ciclo se vuelve a dibujar la etiqueta con la imagen
                    escenario.setLocation(x, y);
                    escenario.repaint();
                    try {
                        sleep(90);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MiniJuego.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panels = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        monini = new javax.swing.JLabel();
        Porcenaje = new javax.swing.JLabel();
        Loading = new javax.swing.JProgressBar();
        escenario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        panels.setBackground(new java.awt.Color(204, 204, 255));
        panels.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Lucida Console", 1, 48)); // NOI18N
        jLabel1.setText("Loading");
        panels.add(jLabel1);
        jLabel1.setBounds(270, 0, 230, 60);

        monini.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Monini_1.gif"))); // NOI18N
        panels.add(monini);
        monini.setBounds(200, 210, 110, 110);

        Porcenaje.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        panels.add(Porcenaje);
        Porcenaje.setBounds(330, 390, 60, 40);
        panels.add(Loading);
        Loading.setBounds(240, 360, 280, 20);

        escenario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EscenarioMinijuego.png.jpg"))); // NOI18N
        panels.add(escenario);
        escenario.setBounds(0, 50, 1420, 300);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panels, javax.swing.GroupLayout.DEFAULT_SIZE, 817, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panels, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        System.out.println("Una tecla se presiono");
        JLabel JLabel1 = null;
        //Graficos fondos = new Graficos(JLabel1);
        int x,y;
        String dir;
        dir="";
        switch(evt.getKeyCode()){
            case KeyEvent.VK_UP:
                
                break;
        }
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiniJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiniJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiniJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiniJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MiniJuego().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Loading;
    private javax.swing.JLabel Porcenaje;
    private javax.swing.JLabel escenario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel monini;
    private javax.swing.JPanel panels;
    // End of variables declaration//GEN-END:variables
}
