
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class Juego extends javax.swing.JFrame {
    
    //En el juego, habrá una lista de materias, una instancia de Estudiante,
    //un administrador de tiempo y un número de materias aprobadas
    public Materia[] materias;
    private Estudiante estudiante; 
    private TimeManagement tiempo;
    private int materiasAprobadas;
 
    public Juego() {
        this.setEnabled(false);
        initComponents();
        this.setLocation(100, 100);
        
        TimeManagement.terminado = false;
        
        //Ocultar etiquetas de alerta
        labFin.setVisible(false);
        labAlerta.setVisible(false);
        labTerminado.setVisible(false);
        
        //Ajustar las progress bars
        jpro_Estres.setMaximum(100);
        jpro_VidaSocial.setMaximum(100);
        
        
        //Crear e inicializar todos los hilos que necesita el juego
        materiasAprobadas = 0;
        materias = new Materia[6];
        estudiante = new Estudiante();
        tiempo = new TimeManagement();
        
        materias[0] = new Materia("Artes");
        materias[1] = new Materia("Deportes");
        materias[2] = new Materia("Historia");
        materias[3] = new Materia("Inglés");
        materias[4] = new Materia("Matemáticas");
        materias[5] = new Materia("Química");
        
        try {
            Thread.sleep(100);
        } catch (InterruptedException ex) {
            Logger.getLogger(Juego.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        estudiante.start();
        tiempo.start();
        for(int i=0;i<6;i++)
        {
            materias[i].start();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        labTerminado = new javax.swing.JLabel();
        jLabel_Monini = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        labCalifQuimica = new javax.swing.JLabel();
        labCalifMate = new javax.swing.JLabel();
        labCalifIngles = new javax.swing.JLabel();
        labCalifHistoria = new javax.swing.JLabel();
        labCalifDeportes = new javax.swing.JLabel();
        labCalifArte = new javax.swing.JLabel();
        jScroll_Mate = new javax.swing.JScrollPane();
        queueMate = new javax.swing.JList<>();
        jScroll_Tareas = new javax.swing.JScrollPane();
        queueTareas = new javax.swing.JList<>();
        jScroll_Quimica = new javax.swing.JScrollPane();
        queueQuimica = new javax.swing.JList<>();
        jScroll_Deportes = new javax.swing.JScrollPane();
        queueDeportes = new javax.swing.JList<>();
        jScroll_Ingles = new javax.swing.JScrollPane();
        queueIngles = new javax.swing.JList<>();
        jScroll_Arte = new javax.swing.JScrollPane();
        queueArte = new javax.swing.JList<>();
        jScroll_Historia = new javax.swing.JScrollPane();
        queueHistoria = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jpro_Estres = new javax.swing.JProgressBar();
        jpro_VidaSocial = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        labFin = new javax.swing.JLabel();
        labAlerta = new javax.swing.JLabel();
        btn_Quimica = new javax.swing.JButton();
        btn_Arte1 = new javax.swing.JButton();
        btn_Deportes = new javax.swing.JButton();
        btn_Matematicas = new javax.swing.JButton();
        btn_Historia = new javax.swing.JButton();
        btn_Ingles = new javax.swing.JButton();
        labTiempo = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(null);

        labTerminado.setFont(new java.awt.Font("Lucida Console", 1, 36)); // NOI18N
        labTerminado.setText("¡Se acabó el semestre!");
        jPanel2.add(labTerminado);
        labTerminado.setBounds(460, 210, 530, 80);

        jLabel_Monini.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CharacterJuego.png"))); // NOI18N
        jPanel2.add(jLabel_Monini);
        jLabel_Monini.setBounds(90, 270, 210, 240);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EtiquetaMate.jpg"))); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(1160, 130, 130, 57);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EtiquetaQuimica.jpg"))); // NOI18N
        jPanel2.add(jLabel7);
        jLabel7.setBounds(1300, 130, 140, 60);

        labCalifQuimica.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        labCalifQuimica.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(labCalifQuimica);
        labCalifQuimica.setBounds(1340, 110, 50, 20);

        labCalifMate.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        labCalifMate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(labCalifMate);
        labCalifMate.setBounds(1200, 110, 50, 20);

        labCalifIngles.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        labCalifIngles.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(labCalifIngles);
        labCalifIngles.setBounds(1060, 110, 50, 20);

        labCalifHistoria.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        labCalifHistoria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(labCalifHistoria);
        labCalifHistoria.setBounds(910, 110, 50, 20);

        labCalifDeportes.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        labCalifDeportes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(labCalifDeportes);
        labCalifDeportes.setBounds(770, 110, 50, 20);

        labCalifArte.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        labCalifArte.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(labCalifArte);
        labCalifArte.setBounds(630, 110, 50, 20);

        queueMate.setBackground(new java.awt.Color(255, 247, 232));
        queueMate.setFont(new java.awt.Font("Lucida Fax", 0, 13)); // NOI18N
        queueMate.setSelectionBackground(new java.awt.Color(153, 204, 255));
        queueMate.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScroll_Mate.setViewportView(queueMate);

        jPanel2.add(jScroll_Mate);
        jScroll_Mate.setBounds(1160, 190, 130, 130);

        queueTareas.setFont(new java.awt.Font("Lucida Fax", 0, 13)); // NOI18N
        queueTareas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        queueTareas.setFocusable(false);
        queueTareas.setName(""); // NOI18N
        queueTareas.setSelectionBackground(new java.awt.Color(255, 204, 204));
        queueTareas.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScroll_Tareas.setViewportView(queueTareas);

        jPanel2.add(jScroll_Tareas);
        jScroll_Tareas.setBounds(260, 170, 240, 190);

        queueQuimica.setBackground(new java.awt.Color(255, 247, 232));
        queueQuimica.setFont(new java.awt.Font("Lucida Fax", 0, 13)); // NOI18N
        queueQuimica.setSelectionBackground(new java.awt.Color(153, 255, 51));
        queueQuimica.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScroll_Quimica.setViewportView(queueQuimica);

        jPanel2.add(jScroll_Quimica);
        jScroll_Quimica.setBounds(1300, 190, 130, 130);

        queueDeportes.setBackground(new java.awt.Color(255, 247, 232));
        queueDeportes.setFont(new java.awt.Font("Lucida Fax", 0, 13)); // NOI18N
        queueDeportes.setSelectionBackground(new java.awt.Color(204, 204, 204));
        queueDeportes.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScroll_Deportes.setViewportView(queueDeportes);

        jPanel2.add(jScroll_Deportes);
        jScroll_Deportes.setBounds(730, 190, 130, 130);

        queueIngles.setBackground(new java.awt.Color(255, 247, 232));
        queueIngles.setFont(new java.awt.Font("Lucida Fax", 0, 13)); // NOI18N
        queueIngles.setSelectionBackground(new java.awt.Color(255, 204, 51));
        queueIngles.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScroll_Ingles.setViewportView(queueIngles);

        jPanel2.add(jScroll_Ingles);
        jScroll_Ingles.setBounds(1020, 190, 130, 130);

        queueArte.setBackground(new java.awt.Color(255, 247, 232));
        queueArte.setFont(new java.awt.Font("Lucida Fax", 0, 13)); // NOI18N
        queueArte.setSelectionBackground(new java.awt.Color(255, 102, 204));
        queueArte.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScroll_Arte.setViewportView(queueArte);

        jPanel2.add(jScroll_Arte);
        jScroll_Arte.setBounds(590, 190, 130, 130);

        queueHistoria.setBackground(new java.awt.Color(255, 247, 232));
        queueHistoria.setFont(new java.awt.Font("Lucida Fax", 0, 13)); // NOI18N
        queueHistoria.setSelectionBackground(new java.awt.Color(255, 153, 51));
        queueHistoria.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScroll_Historia.setViewportView(queueHistoria);

        jPanel2.add(jScroll_Historia);
        jScroll_Historia.setBounds(870, 190, 130, 130);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Tareas en fila");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(290, 130, 180, 40);
        jPanel2.add(jpro_Estres);
        jpro_Estres.setBounds(280, 30, 230, 20);
        jPanel2.add(jpro_VidaSocial);
        jpro_VidaSocial.setBounds(280, 60, 230, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EtiquetaArte.jpg"))); // NOI18N
        jPanel2.add(jLabel4);
        jLabel4.setBounds(590, 130, 130, 60);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EtiquetaDeportes.jpg"))); // NOI18N
        jPanel2.add(jLabel5);
        jLabel5.setBounds(730, 130, 133, 60);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EtiquetaHistoria.jpg"))); // NOI18N
        jPanel2.add(jLabel6);
        jLabel6.setBounds(870, 130, 130, 56);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EtiquetaIngles.jpg"))); // NOI18N
        jPanel2.add(jLabel8);
        jLabel8.setBounds(1020, 130, 130, 56);

        jLabel1.setFont(new java.awt.Font("Lucida Console", 1, 15)); // NOI18N
        jLabel1.setText("Vida Social");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(170, 60, 120, 20);

        labFin.setFont(new java.awt.Font("Lucida Console", 1, 15)); // NOI18N
        labFin.setText("Fin de semana!");
        jPanel2.add(labFin);
        labFin.setBounds(1140, 60, 140, 16);

        labAlerta.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        labAlerta.setForeground(new java.awt.Color(255, 51, 51));
        labAlerta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labAlerta.setText("!");
        jPanel2.add(labAlerta);
        labAlerta.setBounds(520, 30, 20, 50);

        btn_Quimica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Tick.png"))); // NOI18N
        btn_Quimica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_QuimicaActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Quimica);
        btn_Quimica.setBounds(1350, 340, 40, 30);

        btn_Arte1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Tick.png"))); // NOI18N
        btn_Arte1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Arte1ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Arte1);
        btn_Arte1.setBounds(630, 340, 40, 30);

        btn_Deportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Tick.png"))); // NOI18N
        btn_Deportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeportesActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Deportes);
        btn_Deportes.setBounds(780, 340, 40, 30);

        btn_Matematicas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Tick.png"))); // NOI18N
        btn_Matematicas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MatematicasActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Matematicas);
        btn_Matematicas.setBounds(1210, 340, 40, 30);

        btn_Historia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Tick.png"))); // NOI18N
        btn_Historia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HistoriaActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Historia);
        btn_Historia.setBounds(920, 340, 40, 30);

        btn_Ingles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Tick.png"))); // NOI18N
        btn_Ingles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InglesActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Ingles);
        btn_Ingles.setBounds(1070, 340, 40, 30);

        labTiempo.setFont(new java.awt.Font("Lucida Console", 1, 15)); // NOI18N
        labTiempo.setText("0/480");
        jPanel2.add(labTiempo);
        labTiempo.setBounds(1180, 30, 100, 30);

        jLabel12.setFont(new java.awt.Font("Lucida Console", 1, 15)); // NOI18N
        jLabel12.setText("Estres");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(200, 30, 70, 16);

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EscenarioFinalJuego.jpg"))); // NOI18N
        jPanel2.add(Fondo);
        Fondo.setBounds(0, -30, 1580, 590);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1505, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_Arte1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Arte1ActionPerformed
        // Para todos los botones, si la cola de tareas de esa materia no está vacía,
        //añade la primera tarea de la fila de la materia a la fila del estudiante
        if(!materias[0].colaTareas.isEmpty())
            estudiante.colaTareas.add(materias[0].removerTarea());
    }//GEN-LAST:event_btn_Arte1ActionPerformed

    private void btn_DeportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeportesActionPerformed
        // TODO add your handling code here:
        if(!materias[1].colaTareas.isEmpty())
            estudiante.colaTareas.add(materias[1].removerTarea());
    }//GEN-LAST:event_btn_DeportesActionPerformed

    private void btn_HistoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HistoriaActionPerformed
        // TODO add your handling code here:
        if(!materias[2].colaTareas.isEmpty())
            estudiante.colaTareas.add(materias[2].removerTarea());
    }//GEN-LAST:event_btn_HistoriaActionPerformed

    private void btn_InglesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InglesActionPerformed
        // TODO add your handling code here:
        if(!materias[3].colaTareas.isEmpty())
            estudiante.colaTareas.add(materias[3].removerTarea());
    }//GEN-LAST:event_btn_InglesActionPerformed

    private void btn_MatematicasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MatematicasActionPerformed
        // TODO add your handling code here:
        if(!materias[4].colaTareas.isEmpty())
            estudiante.colaTareas.add(materias[4].removerTarea());
    }//GEN-LAST:event_btn_MatematicasActionPerformed

    private void btn_QuimicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_QuimicaActionPerformed
        // TODO add your handling code here:
        if(!materias[5].colaTareas.isEmpty())
            estudiante.colaTareas.add(materias[5].removerTarea());
    }//GEN-LAST:event_btn_QuimicaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Juego().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Fondo;
    private javax.swing.JButton btn_Arte1;
    private javax.swing.JButton btn_Deportes;
    private javax.swing.JButton btn_Historia;
    private javax.swing.JButton btn_Ingles;
    private javax.swing.JButton btn_Matematicas;
    private javax.swing.JButton btn_Quimica;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_Monini;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScroll_Arte;
    private javax.swing.JScrollPane jScroll_Deportes;
    private javax.swing.JScrollPane jScroll_Historia;
    private javax.swing.JScrollPane jScroll_Ingles;
    private javax.swing.JScrollPane jScroll_Mate;
    private javax.swing.JScrollPane jScroll_Quimica;
    private javax.swing.JScrollPane jScroll_Tareas;
    private javax.swing.JProgressBar jpro_Estres;
    private javax.swing.JProgressBar jpro_VidaSocial;
    private javax.swing.JLabel labAlerta;
    private javax.swing.JLabel labCalifArte;
    private javax.swing.JLabel labCalifDeportes;
    private javax.swing.JLabel labCalifHistoria;
    private javax.swing.JLabel labCalifIngles;
    private javax.swing.JLabel labCalifMate;
    private javax.swing.JLabel labCalifQuimica;
    private javax.swing.JLabel labFin;
    private javax.swing.JLabel labTerminado;
    private javax.swing.JLabel labTiempo;
    private javax.swing.JList<String> queueArte;
    private javax.swing.JList<String> queueDeportes;
    private javax.swing.JList<String> queueHistoria;
    private javax.swing.JList<String> queueIngles;
    private javax.swing.JList<String> queueMate;
    private javax.swing.JList<String> queueQuimica;
    private javax.swing.JList<String> queueTareas;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Método para actualizar todos los elementos de la interfaz gráfica del juego
     * de acuerdo con las reglas del juego. Está programado para ejecutarse una vez por segundo.
     * Realiza las siguientes acciones:
     * - Actualiza la etiqueta de tiempo
     * - Si el contador de tiempo es un múltiplo de 30, realiza las tareas de Fin de Semana de acuerdo con las reglas del juego
     * - Se ajustan los valores de Estrés y Vida Social de la instancia de Estudiante de acuerdo con las reglas del juego
     * - Se ajustan las barras de progreso
     * - Se habilitan o deshabilitan los botones de acuerdo con las reglas del juego
     * - Se actualizan los elementos gráficos para cada una de las colas de tareas de todos los hilos
     */
    public void actualizarGUI()
    {
        //Ajustar etiqueta de tiempo
        labTiempo.setText(tiempo.horas + "/" + tiempo.tiempoMaximo);
        labFin.setVisible(false);
        
        
        if(tiempo.horas%30 == 0)
        {
            labFin.setVisible(true);
            estudiante.estres = estudiante.estres - 20;
            estudiante.vidaSocial = estudiante.vidaSocial + 20;
            
            if(estudiante.estres < 0)
            {
                estudiante.estres = 0;
            }
            if(estudiante.vidaSocial > 100)
            {
                estudiante.vidaSocial = 100;
            }
        }
        
        //Cambios de Estrés y Vida Social si el estudiante trabaja o no
        if(!estudiante.isWorking)
        {
            if(estudiante.estres>0)
            {
                estudiante.estres = estudiante.estres - 2;
                if(estudiante.estres<0)
                {
                    estudiante.estres = 0;
                }
            }
                
            if(estudiante.vidaSocial<100)
            {
                estudiante.vidaSocial = estudiante.vidaSocial + 2;
                if(estudiante.vidaSocial>100)
                {
                    estudiante.vidaSocial = 100;
                }
            }
                
        }
        else
        {
            System.out.println("Reduciendo...");
            if(!estudiante.colaTareas.isEmpty())
            {
                //Vida Social o Estrés bajan de acuerdo con la materia de la tarea actual
                switch(estudiante.colaTareas.peek().materia)
                {
                    case "Deportes":
                    case "Artes":
                    case "Inglés":
                        estudiante.vidaSocial = estudiante.vidaSocial - 2;
                        break;
                    case "Matemáticas":
                    case "Química":
                    case "Historia":
                        estudiante.estres = estudiante.estres + 2;
                        break;
                }
                if(estudiante.estres>100)
                {
                    estudiante.estres = 100;
                }
                if(estudiante.vidaSocial<0)
                {
                    estudiante.vidaSocial = 0;
                }
            }
        }
        
        //Ajustar las barras de progreso
        jpro_Estres.setValue(estudiante.estres);
        jpro_VidaSocial.setValue(estudiante.vidaSocial);
        
        //Si hay mucho Estrés, poca Vida Social o muchas tareas en cola, se deshabilitan los botones y se activa una alerta
        if(estudiante.estres > 90 || estudiante.vidaSocial < 10 || estudiante.colaTareas.size() >= 10)
        {
            btn_Arte1.setEnabled(false);
            btn_Deportes.setEnabled(false);
            btn_Historia.setEnabled(false);
            btn_Ingles.setEnabled(false);
            btn_Matematicas.setEnabled(false);
            btn_Quimica.setEnabled(false);
            
            labAlerta.setVisible(true);
        }
        else
        {
            btn_Arte1.setEnabled(true);
            btn_Deportes.setEnabled(true);
            btn_Historia.setEnabled(true);
            btn_Ingles.setEnabled(true);
            btn_Matematicas.setEnabled(true);
            btn_Quimica.setEnabled(true);
            
            labAlerta.setVisible(false);
        }
        
        
        //Se actualizan todas las listas de datos de las colas de tareas
        queueArte.setListData(materias[0].listaActividades());
        queueDeportes.setListData(materias[1].listaActividades());
        queueHistoria.setListData(materias[2].listaActividades());
        queueIngles.setListData(materias[3].listaActividades());
        queueMate.setListData(materias[4].listaActividades());
        queueQuimica.setListData(materias[5].listaActividades());
        
        queueTareas.setListData(estudiante.listaActividades());
    }
    
    
    /**
     * Método que realiza todas las tareas de cierre del juego una vez se agotó
     * el tiempo de juego. Realiza las siguientes tareas:
     * - Calcula la calificación de cada materia y determina si fue aprobada o no
     * - Muestra la calificación de cada materia en pantalla
     * - Determina si se gana o pierde de acuerdo con las reglasa del juego
     */
    public void resolverResultado()
    {
        //Indicador de que el juego ha terminado
        labTerminado.setVisible(true);
        
        //Cálculo de calificación
        for(int i=0;i<6;i++)
        {
            materias[i].calcularCalificacion();
            if(materias[i].calificacion >= 6)
            {
                materiasAprobadas++;
            }
        }
        
        try {
            //Cada calificación se muestra en pantalla
            //Aparece en rojo si está reprobada
            Thread.sleep(1500);

            labCalifArte.setText(Integer.toString(materias[0].calificacion));
            if(materias[0].calificacion<6)
                labCalifArte.setForeground(Color.RED);
            Thread.sleep(700);
            
            labCalifDeportes.setText(Integer.toString(materias[1].calificacion));
            if(materias[1].calificacion<6)
                labCalifDeportes.setForeground(Color.RED);
            Thread.sleep(700);
            
            labCalifHistoria.setText(Integer.toString(materias[2].calificacion));
            if(materias[2].calificacion<6)
                labCalifHistoria.setForeground(Color.RED);
            Thread.sleep(700);
            
            labCalifIngles.setText(Integer.toString(materias[3].calificacion));
            if(materias[3].calificacion<6)
                labCalifIngles.setForeground(Color.RED);
            Thread.sleep(700);
            
            labCalifMate.setText(Integer.toString(materias[4].calificacion));
            if(materias[4].calificacion<6)
                labCalifMate.setForeground(Color.RED);
            Thread.sleep(700);
            
            labCalifQuimica.setText(Integer.toString(materias[5].calificacion));
            if(materias[5].calificacion<6)
                labCalifQuimica.setForeground(Color.RED);
            Thread.sleep(700);
            
        } catch (InterruptedException ex) {
            Logger.getLogger(Juego.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Si se aprueban suficientes materias, se gana. Si no, se pierde
        if(materiasAprobadas >= 4)
        {
            Ventanas.mostrarWinner();
        }
        else
        {
            Ventanas.mostrarGameOver();
        }
        
        this.setEnabled(false);
        this.setVisible(false);
    }

}
